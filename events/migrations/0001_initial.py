# Generated by Django 5.1.4 on 2025-08-08 09:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('artists', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Тип события',
                'verbose_name_plural': 'Типы событий',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('address', models.CharField(max_length=300, verbose_name='Адрес')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('country', models.CharField(max_length=100, verbose_name='Страна')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Почтовый индекс')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('capacity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Вместимость')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Место проведения',
                'verbose_name_plural': 'Места проведения',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='URL')),
                ('description', models.TextField(verbose_name='Описание')),
                ('short_description', models.CharField(blank=True, max_length=300, verbose_name='Краткое описание')),
                ('start_datetime', models.DateTimeField(verbose_name='Дата и время начала')),
                ('end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Дата и время окончания')),
                ('doors_open', models.TimeField(blank=True, null=True, verbose_name='Время открытия дверей')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='events/', verbose_name='Постер')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='events/banners/', verbose_name='Баннер')),
                ('ticket_price_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Минимальная цена билета')),
                ('ticket_price_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Максимальная цена билета')),
                ('ticket_url', models.URLField(blank=True, verbose_name='Ссылка на билеты')),
                ('is_free', models.BooleanField(default=False, verbose_name='Бесплатное')),
                ('age_limit', models.PositiveIntegerField(blank=True, null=True, verbose_name='Возрастное ограничение')),
                ('status', models.CharField(choices=[('upcoming', 'Предстоящее'), ('ongoing', 'Происходит сейчас'), ('completed', 'Завершено'), ('cancelled', 'Отменено'), ('postponed', 'Перенесено')], default='upcoming', max_length=20, verbose_name='Статус')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемое')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook Event')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель')),
                ('headliner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='headlined_events', to='artists.artist', verbose_name='Хедлайнер')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='EventArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('headliner', 'Хедлайнер'), ('support', 'Саппорт'), ('opener', 'Открывающий'), ('special_guest', 'Специальный гость'), ('dj_set', 'DJ Set')], default='support', max_length=20, verbose_name='Роль')),
                ('performance_order', models.PositiveIntegerField(default=1, verbose_name='Порядок выступления')),
                ('performance_time', models.TimeField(blank=True, null=True, verbose_name='Время выступления')),
                ('set_duration', models.DurationField(blank=True, null=True, verbose_name='Длительность сета')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artists.artist')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
            options={
                'verbose_name': 'Артист события',
                'verbose_name_plural': 'Артисты событий',
                'ordering': ['performance_order'],
                'unique_together': {('event', 'artist')},
            },
        ),
        migrations.AddField(
            model_name='event',
            name='artists',
            field=models.ManyToManyField(through='events.EventArtist', to='artists.artist', verbose_name='Артисты'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.eventtype', verbose_name='Тип события'),
        ),
        migrations.AddField(
            model_name='event',
            name='venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.venue', verbose_name='Место проведения'),
        ),
        migrations.CreateModel(
            name='EventAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('going', 'Пойду'), ('maybe', 'Возможно'), ('not_going', 'Не пойду')], max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event', verbose_name='Событие')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Посещение события',
                'verbose_name_plural': 'Посещения событий',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'event')},
            },
        ),
    ]
