# Generated by Django 5.1.4 on 2025-08-08 09:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Имя артиста')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='URL')),
                ('real_name', models.CharField(blank=True, max_length=200, verbose_name='Настоящее имя')),
                ('bio', models.TextField(blank=True, verbose_name='Биография')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='artists/', verbose_name='Фото')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='artists/banners/', verbose_name='Баннер')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter')),
                ('soundcloud_url', models.URLField(blank=True, verbose_name='SoundCloud')),
                ('spotify_url', models.URLField(blank=True, verbose_name='Spotify')),
                ('youtube_url', models.URLField(blank=True, verbose_name='YouTube')),
                ('bandcamp_url', models.URLField(blank=True, verbose_name='Bandcamp')),
                ('beatport_url', models.URLField(blank=True, verbose_name='Beatport')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Страна')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Город')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Рекомендуемый')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('followers_count', models.PositiveIntegerField(default=0, verbose_name='Количество подписчиков')),
                ('total_plays', models.PositiveIntegerField(default=0, verbose_name='Общее количество прослушиваний')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Артист',
                'verbose_name_plural': 'Артисты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ArtistFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed_at', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artists.artist', verbose_name='Артист')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подписка на артиста',
                'verbose_name_plural': 'Подписки на артистов',
                'ordering': ['-followed_at'],
            },
        ),
        migrations.CreateModel(
            name='ArtistGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Основной жанр')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='artists.artist')),
            ],
            options={
                'verbose_name': 'Жанр артиста',
                'verbose_name_plural': 'Жанры артистов',
            },
        ),
    ]
